diff -Naur gtest-1.5.0/Makefile gtest-1.5.0.nacl/Makefile
--- gtest-1.5.0/Makefile	1969-12-31 17:00:00.000000000 -0700
+++ gtest-1.5.0.nacl/Makefile	2010-07-08 09:49:37.000000000 -0600
@@ -0,0 +1,25 @@
+CXXFLAGS = -O0 -g
+INCLUDE = -Iinclude -I.
+LIB_GTEST = libgtest.a
+OBJ_DIR = obj
+
+OBJ_FILES = gtest.o \
+            gtest-filepath.o \
+            gtest-port.o \
+            gtest-test-part.o \
+            gtest-typed-test.o
+
+all: $(LIB_GTEST)
+	@echo "Making libgtest"
+
+clean:
+	rm -rf $(OBJ_DIR) $(LIB_GTEST)
+
+$(OBJ_DIR):
+	mkdir $(OBJ_DIR)
+
+$(OBJ_FILES): %.o: src/%.cc $(OBJ_DIR)
+	$(CXX) -c $(INCLUDE) $(CXXFLAGS) $< -o $(OBJ_DIR)/$@
+
+$(LIB_GTEST): $(OBJ_DIR) $(OBJ_FILES)
+	cd $(OBJ_DIR) && $(AR) rcs ../$(LIB_GTEST) $(OBJ_FILES)
diff -Naur gtest-1.5.0/include/gtest/gtest.h gtest-1.5.0.nacl/include/gtest/gtest.h
--- gtest-1.5.0/include/gtest/gtest.h	2010-04-15 16:02:03.000000000 -0600
+++ gtest-1.5.0.nacl/include/gtest/gtest.h	2010-07-08 09:49:37.000000000 -0600
@@ -56,7 +56,6 @@

 #include <gtest/internal/gtest-internal.h>
 #include <gtest/internal/gtest-string.h>
-#include <gtest/gtest-death-test.h>
 #include <gtest/gtest-message.h>
 #include <gtest/gtest-param-test.h>
 #include <gtest/gtest_prod.h>
diff -Naur gtest-1.5.0/include/gtest/internal/gtest-port.h gtest-1.5.0.nacl/include/gtest/internal/gtest-port.h
--- gtest-1.5.0/include/gtest/internal/gtest-port.h	2010-04-15 16:02:02.000000000 -0600
+++ gtest-1.5.0.nacl/include/gtest/internal/gtest-port.h	2010-07-08 09:49:37.000000000 -0600
@@ -222,14 +222,13 @@
 #endif  // __CYGWIN__

 #if GTEST_OS_CYGWIN || GTEST_OS_LINUX || GTEST_OS_MAC || GTEST_OS_SYMBIAN || \
-    GTEST_OS_SOLARIS || GTEST_OS_AIX
+    GTEST_OS_SOLARIS || GTEST_OS_AIX && !defined(__native_client__)

 // On some platforms, <regex.h> needs someone to define size_t, and
 // won't compile otherwise.  We can #include it here as we already
 // included <stdlib.h>, which is guaranteed to define size_t through
 // <stddef.h>.
 #include <regex.h>  // NOLINT
-#include <strings.h>  // NOLINT
 #include <sys/types.h>  // NOLINT
 #include <time.h>  // NOLINT
 #include <unistd.h>  // NOLINT
@@ -485,7 +484,9 @@
 #if (GTEST_OS_LINUX || GTEST_OS_MAC || GTEST_OS_CYGWIN || GTEST_OS_SOLARIS || \
      (GTEST_OS_WINDOWS_DESKTOP && _MSC_VER >= 1400) || \
      GTEST_OS_WINDOWS_MINGW || GTEST_OS_AIX)
+#if !defined(__native_client__)
 #define GTEST_HAS_DEATH_TEST 1
+#endif
 #include <vector>  // NOLINT
 #endif

@@ -839,11 +840,7 @@
 // testing Google Test's own constructs.  Don't use it in user tests,
 // either directly or indirectly.
 inline void SleepMilliseconds(int n) {
-  const timespec time = {
-    0,                  // 0 seconds.
-    n * 1000L * 1000L,  // And n ms.
-  };
-  nanosleep(&time, NULL);
+  usleep(100 * n);
 }

 // Allows a controller thread to pause execution of newly created
diff -Naur gtest-1.5.0/src/gtest-death-test.cc gtest-1.5.0.nacl/src/gtest-death-test.cc
--- gtest-1.5.0/src/gtest-death-test.cc	2010-04-15 16:02:04.000000000 -0600
+++ gtest-1.5.0.nacl/src/gtest-death-test.cc	2010-07-08 09:49:38.000000000 -0600
@@ -34,6 +34,8 @@
 #include <gtest/gtest-death-test.h>
 #include <gtest/internal/gtest-port.h>

+#undef GTEST_HAS_DEATH_TEST
+
 #if GTEST_HAS_DEATH_TEST

 #if GTEST_OS_MAC
diff -Naur gtest-1.5.0/src/gtest-filepath.cc gtest-1.5.0.nacl/src/gtest-filepath.cc
--- gtest-1.5.0/src/gtest-filepath.cc	2010-04-15 16:02:04.000000000 -0600
+++ gtest-1.5.0.nacl/src/gtest-filepath.cc	2010-07-08 09:49:38.000000000 -0600
@@ -96,21 +96,6 @@
 #endif
 }

-// Returns the current working directory, or "" if unsuccessful.
-FilePath FilePath::GetCurrentDir() {
-#if GTEST_OS_WINDOWS_MOBILE
-  // Windows CE doesn't have a current directory, so we just return
-  // something reasonable.
-  return FilePath(kCurrentDirectoryString);
-#elif GTEST_OS_WINDOWS
-  char cwd[GTEST_PATH_MAX_ + 1] = { '\0' };
-  return FilePath(_getcwd(cwd, sizeof(cwd)) == NULL ? "" : cwd);
-#else
-  char cwd[GTEST_PATH_MAX_ + 1] = { '\0' };
-  return FilePath(getcwd(cwd, sizeof(cwd)) == NULL ? "" : cwd);
-#endif  // GTEST_OS_WINDOWS_MOBILE
-}
-
 // Returns a copy of the FilePath with the case-insensitive extension removed.
 // Example: FilePath("dir/file.exe").RemoveExtension("EXE") returns
 // FilePath("dir/file"). If a case-insensitive extension is not
diff -Naur gtest-1.5.0/src/gtest-internal-inl.h gtest-1.5.0.nacl/src/gtest-internal-inl.h
--- gtest-1.5.0/src/gtest-internal-inl.h	2010-04-15 16:02:04.000000000 -0600
+++ gtest-1.5.0.nacl/src/gtest-internal-inl.h	2010-07-08 09:49:39.000000000 -0600
@@ -67,13 +67,6 @@

 namespace testing {

-// Declares the flags.
-//
-// We don't want the users to modify this flag in the code, but want
-// Google Test's own unit tests to be able to access it. Therefore we
-// declare it here as opposed to in gtest.h.
-GTEST_DECLARE_bool_(death_test_use_fork);
-
 namespace internal {

 // The value of GetTestTypeId() as seen from within the Google Test
@@ -154,10 +147,7 @@
     break_on_failure_ = GTEST_FLAG(break_on_failure);
     catch_exceptions_ = GTEST_FLAG(catch_exceptions);
     color_ = GTEST_FLAG(color);
-    death_test_style_ = GTEST_FLAG(death_test_style);
-    death_test_use_fork_ = GTEST_FLAG(death_test_use_fork);
     filter_ = GTEST_FLAG(filter);
-    internal_run_death_test_ = GTEST_FLAG(internal_run_death_test);
     list_tests_ = GTEST_FLAG(list_tests);
     output_ = GTEST_FLAG(output);
     print_time_ = GTEST_FLAG(print_time);
@@ -174,10 +164,7 @@
     GTEST_FLAG(break_on_failure) = break_on_failure_;
     GTEST_FLAG(catch_exceptions) = catch_exceptions_;
     GTEST_FLAG(color) = color_;
-    GTEST_FLAG(death_test_style) = death_test_style_;
-    GTEST_FLAG(death_test_use_fork) = death_test_use_fork_;
     GTEST_FLAG(filter) = filter_;
-    GTEST_FLAG(internal_run_death_test) = internal_run_death_test_;
     GTEST_FLAG(list_tests) = list_tests_;
     GTEST_FLAG(output) = output_;
     GTEST_FLAG(print_time) = print_time_;
@@ -193,10 +180,7 @@
   bool break_on_failure_;
   bool catch_exceptions_;
   String color_;
-  String death_test_style_;
-  bool death_test_use_fork_;
   String filter_;
-  String internal_run_death_test_;
   bool list_tests_;
   String output_;
   bool print_time_;
@@ -699,18 +683,6 @@
   void AddTestInfo(Test::SetUpTestCaseFunc set_up_tc,
                    Test::TearDownTestCaseFunc tear_down_tc,
                    TestInfo * test_info) {
-    // In order to support thread-safe death tests, we need to
-    // remember the original working directory when the test program
-    // was first invoked.  We cannot do this in RUN_ALL_TESTS(), as
-    // the user may have changed the current directory before calling
-    // RUN_ALL_TESTS().  Therefore we capture the current directory in
-    // AddTestInfo(), which is called to register a TEST or TEST_F
-    // before main() is reached.
-    if (original_working_dir_.IsEmpty()) {
-      original_working_dir_.Set(FilePath::GetCurrentDir());
-      GTEST_CHECK_(!original_working_dir_.IsEmpty())
-          << "Failed to get the current working directory.";
-    }

     GetTestCase(test_info->test_case_name(),
                 test_info->test_case_comment(),
diff -Naur gtest-1.5.0/src/gtest.cc gtest-1.5.0.nacl/src/gtest.cc
--- gtest-1.5.0/src/gtest.cc	2010-04-15 16:02:04.000000000 -0600
+++ gtest-1.5.0.nacl/src/gtest.cc	2010-07-08 09:49:40.000000000 -0600
@@ -57,7 +57,9 @@
 #include <limits.h>
 #include <sched.h>
 // Declares vsnprintf().  This header is not available on Windows.
+#if !defined(__native_client__)
 #include <strings.h>
+#endif
 #include <sys/mman.h>
 #include <sys/time.h>
 #include <unistd.h>
@@ -4597,13 +4599,7 @@
         ParseBoolFlag(arg, kCatchExceptionsFlag,
                       &GTEST_FLAG(catch_exceptions)) ||
         ParseStringFlag(arg, kColorFlag, &GTEST_FLAG(color)) ||
-        ParseStringFlag(arg, kDeathTestStyleFlag,
-                        &GTEST_FLAG(death_test_style)) ||
-        ParseBoolFlag(arg, kDeathTestUseFork,
-                      &GTEST_FLAG(death_test_use_fork)) ||
         ParseStringFlag(arg, kFilterFlag, &GTEST_FLAG(filter)) ||
-        ParseStringFlag(arg, kInternalRunDeathTestFlag,
-                        &GTEST_FLAG(internal_run_death_test)) ||
         ParseBoolFlag(arg, kListTestsFlag, &GTEST_FLAG(list_tests)) ||
         ParseStringFlag(arg, kOutputFlag, &GTEST_FLAG(output)) ||
         ParseBoolFlag(arg, kPrintTimeFlag, &GTEST_FLAG(print_time)) ||
diff -Naur gtest-1.5.0/src/gtest_main.cc gtest-1.5.0.nacl/src/gtest_main.cc
--- gtest-1.5.0/src/gtest_main.cc	2010-04-15 16:02:04.000000000 -0600
+++ gtest-1.5.0.nacl/src/gtest_main.cc	2010-07-08 10:14:13.000000000 -0600
@@ -33,7 +33,6 @@

 int main(int argc, char **argv) {
   std::cout << "Running main() from gtest_main.cc\n";
-
   testing::InitGoogleTest(&argc, argv);
   return RUN_ALL_TESTS();
 }
