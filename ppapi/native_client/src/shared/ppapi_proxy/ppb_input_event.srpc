# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# RPC methods used to implement the PPB_InputEvent interface.
# See ppapi/c/ppb_input_event.h for interface details.
{
 'name': 'PpbInputEventRpc',
 'rpcs': [
          {'name': 'PPB_InputEvent_RequestInputEvents',
           'inputs': [['instance', 'PP_Instance'],  # PP_Instance
                      ['event_classes', 'int32_t'],  # uint32_t, bitfield
                      ['filtered', 'int32_t']  # bool
                     ],
           'outputs': [['success', 'int32_t'],  # pp_error value
                      ]
          },
          {'name': 'PPB_InputEvent_ClearInputEventRequest',
           'inputs': [['instance', 'PP_Instance'],  # PP_Instance
                      ['event_classes', 'int32_t']  # uint32_t, bitfield
                     ],
           'outputs': []
          },
          {'name': 'PPB_InputEvent_CreateMouseInputEvent',
           'inputs': [['instance', 'PP_Instance'],  # PP_Instance
                      ['type', 'int32_t'],  # PP_InputEvent_Type
                      ['time_stamp', 'double'],  # PP_TimeTicks
                      ['modifiers', 'int32_t'],  # uint32_t
                      ['mouse_button', 'int32_t'],  # PP_InputEvent_MouseButton
                      ['mouse_position_x', 'int32_t'],  # PP_Point.x
                      ['mouse_position_y', 'int32_t'],  # PP_Point.y
                      ['click_count', 'int32_t'],
                      ['mouse_movement_x', 'int32_t'],  # PP_Point.x
                      ['mouse_movement_y', 'int32_t'],  # PP_Point.y
                     ],
           'outputs': [['resource_id', 'PP_Resource']]
          },
          {'name': 'PPB_InputEvent_CreateWheelInputEvent',
           'inputs': [['instance', 'PP_Instance'],  # PP_Instance
                      ['time_stamp', 'double'],  # PP_TimeTicks
                      ['modifiers', 'int32_t'],  # uint32_t
                      ['wheel_delta_x', 'double'],  # PP_FloatPoint.x
                      ['wheel_delta_y', 'double'],  # PP_FloatPoint.y
                      ['wheel_ticks_x', 'double'],  # PP_FloatPoint.x
                      ['wheel_ticks_y', 'double'],  # PP_FloatPoint.y
                      ['scroll_by_page', 'int32_t']  # PP_Bool
                     ],
           'outputs': [['resource_id', 'PP_Resource']]
          },
          {'name': 'PPB_InputEvent_CreateKeyboardInputEvent',
           'inputs': [['instance', 'PP_Instance'],  # PP_Instance
                      ['type', 'int32_t'],  # PP_InputEvent_Type
                      ['time_stamp', 'double'],  # PP_TimeTicks
                      ['modifiers', 'int32_t'],  # uint32_t
                      ['key_code', 'int32_t'],  # uint32_t
                      ['character_text', 'char[]']  # String PP_Var
                     ],
           'outputs': [['resource_id', 'PP_Resource']]
          }

         ]
}

