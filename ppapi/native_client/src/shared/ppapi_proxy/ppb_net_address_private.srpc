# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# RPC methods used to implement PPB_NetAddress_Private calls from the plugin.
# See ppapi/c/private/ppb_net_address_private.h for interface details.

{
  'name': 'PpbNetAddressPrivateRpc',
  'rpcs': [
    {'name': 'PPB_NetAddress_Private_AreEqual',
     'inputs': [['addr1', 'char[]'],                 # PP_NetAddress_Private*
                ['addr2', 'char[]'],                 # PP_NetAddress_Private*
               ],
     'outputs': [['equals', 'int32_t'],              # PP_Bool
                ]
    },
    {'name': 'PPB_NetAddress_Private_AreHostsEqual',
     'inputs': [['addr1', 'char[]'],                 # PP_NetAddress_Private*
                ['addr2', 'char[]'],                 # PP_NetAddress_Private*
               ],
     'outputs': [['equals', 'int32_t'],              # PP_Bool
                ]
    },
    {'name': 'PPB_NetAddress_Private_Describe',
     'inputs': [['module', 'int32_t'],               # PP_Module
                ['addr', 'char[]'],                  # PP_NetAddress_Private*
                ['include_port', 'int32_t'],         # PP_Bool
               ],
     'outputs': [['description', 'char[]'],          # PP_Var
                ]
    },
    {'name': 'PPB_NetAddress_Private_ReplacePort',
     'inputs': [['src_addr', 'char[]'],              # PP_NetAddress_Private*
                ['port', 'int32_t'],                 # uint16_t
               ],
     'outputs': [['dst_addr', 'char[]'],             # PP_NetAddress_Private*
                 ['success', 'int32_t'],             # PP_Bool
                ]
    },
    {'name': 'PPB_NetAddress_Private_GetAnyAddress',
     'inputs': [['is_ipv6', 'int32_t'],              # PP_Bool
               ],
     'outputs': [['addr', 'char[]'],                 # PP_NetAddress_Private*
                ]
    },
    {'name': 'PPB_NetAddress_Private_GetFamily',
     'inputs': [['addr', 'char[]'],                  # PP_NetAddress_Private*
               ],
     'outputs': [['addr_family', 'int32_t'],  # PP_NetAddressFamily_Private
                ]
    },
    {'name': 'PPB_NetAddress_Private_GetPort',
     'inputs': [['addr', 'char[]'],                  # PP_NetAddress_Private*
               ],
     'outputs': [['port', 'int32_t'],                # uint16_t
                ]
    },
    {'name': 'PPB_NetAddress_Private_GetAddress',
     'inputs': [['addr', 'char[]'],                  # PP_NetAddress_Private*
               ],
     'outputs': [['address', 'char[]'],
                 ['success', 'int32_t'],             # PP_Bool
                ]
    },
    {'name': 'PPB_NetAddress_Private_GetScopeID',
     'inputs': [['addr', 'char[]'],                  # PP_NetAddress_Private*
               ],
     'outputs': [['scope_id', 'int32_t'],            # uint32_t
                ]
    },
    {'name': 'PPB_NetAddress_Private_CreateFromIPv4Address',
     'inputs': [['ip', 'char[]'],                   # uint8_t[4]
                ['port', 'int32_t'],                # uint16_t
               ],
     'outputs': [['addr', 'char[]'],                 # PP_NetAddress_Private*
                ]
    },
    {'name': 'PPB_NetAddress_Private_CreateFromIPv6Address',
     'inputs': [['ip', 'char[]'],                   # uint8_t[16]
                ['scope_id', 'int32_t'],            # uint32_t
                ['port', 'int32_t'],                # uint16_t
               ],
     'outputs': [['addr', 'char[]'],                 # PP_NetAddress_Private*
                ]
    },
   ]
}
