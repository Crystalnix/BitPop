# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# RPC methods used to implement PPB_URLLoader calls from the plugin.
# See ppapi/c/ppb_url_loader.h for interface details.

{
 'name': 'PpbURLLoaderRpc',
 'rpcs': [
          {'name': 'PPB_URLLoader_Create',
           'inputs': [['instance', 'PP_Instance'],    # PP_Instance
                     ],
           'outputs': [['resource', 'PP_Resource'],   # PP_Resource
                      ]
          },
          {'name': 'PPB_URLLoader_IsURLLoader',
           'inputs': [['resource', 'PP_Resource'],    # PP_Resource
                     ],
           'outputs': [['is_url_loader', 'int32_t'],  # PP_Bool
                      ]
          },
          {'name': 'PPB_URLLoader_Open',
           'inputs': [['loader', 'PP_Resource'],      # PP_Resource
                      ['request', 'PP_Resource'],     # PP_Resource
                      ['callback_id', 'int32_t'],     # PP_CompletionCallback
                     ],
           'outputs': [['pp_error', 'int32_t'],       # int32_t
                      ]
          },
          {'name': 'PPB_URLLoader_FollowRedirect',
           'inputs': [['loader', 'PP_Resource'],      # PP_Resource
                      ['callback_id', 'int32_t'],     # PP_CompletionCallback
                     ],
           'outputs': [['pp_error', 'int32_t'],       # int32_t
                      ]
          },
          {'name': 'PPB_URLLoader_GetUploadProgress',
           'inputs': [['loader', 'PP_Resource'],      # PP_Resource
                     ],
           'outputs': [['bytes_sent', 'int64_t'],              # int64_t*
                       ['total_bytes_to_be_sent', 'int64_t'],  # int64_t*
                       ['success', 'int32_t'],                 # PP_Bool
                      ]
          },
          {'name': 'PPB_URLLoader_GetDownloadProgress',
           'inputs': [['loader', 'PP_Resource'],      # PP_Resource
                     ],
           'outputs': [['bytes_received', 'int64_t'],              # int64_t*
                       ['total_bytes_to_be_received', 'int64_t'],  # int64_t*
                       ['success', 'int32_t'],                     # PP_Bool
                      ]
          },
          {'name': 'PPB_URLLoader_GetResponseInfo',
           'inputs': [['loader', 'PP_Resource'],      # PP_Resource
                     ],
           'outputs': [['response', 'PP_Resource'],   # PP_Resource
                      ]
          },
          {'name': 'PPB_URLLoader_ReadResponseBody',
           'inputs': [['loader', 'PP_Resource'],      # PP_Resource
                      ['bytes_to_read', 'int32_t'],   # int32_t
                      ['callback_id', 'int32_t'],     # PP_CompletionCallback
                     ],
           'outputs': [['buffer', 'char[]'],              # char*
                       ['pp_error_or_bytes', 'int32_t'],  # int32_t
                      ]
          },
          {'name': 'PPB_URLLoader_FinishStreamingToFile',
           'inputs': [['loader', 'PP_Resource'],      # PP_Resource
                      ['callback_id', 'int32_t'],     # PP_CompletionCallback
                     ],
           'outputs': [['pp_error', 'int32_t'],       # int32_t
                      ]
          },
          {'name': 'PPB_URLLoader_Close',
           'inputs': [['loader', 'PP_Resource'],      # PP_Resource
                     ],
           'outputs': [
                      ]
          },
         ]
}
