# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# RPC methods used to implement PPB_TCPSocket_Private calls from the plugin.
# See ppapi/c/private/ppb_tcp_socket_private.h for interface details.

{
  'name': 'PpbTCPSocketPrivateRpc',
  'rpcs': [
    {'name': 'PPB_TCPSocket_Private_Create',
     'inputs': [['instance', 'PP_Instance'],         # PP_Instance
               ],
     'outputs': [['resource', 'PP_Resource'],        # PP_Resource
                ]
    },
    {'name': 'PPB_TCPSocket_Private_IsTCPSocket',
     'inputs': [['resource', 'PP_Resource'],         # PP_Resource
               ],
     'outputs': [['is_tcp_socket', 'int32_t'],       # PP_Bool
                ]
    },
    {'name': 'PPB_TCPSocket_Private_Connect',
     'inputs': [['tcp_socket', 'PP_Resource'],       # PP_Resource
                ['host', 'string'],                  # const char*
                ['port', 'int32_t'],                 # uint16_t
                ['callback_id', 'int32_t'],          # PP_CompletionCallback
                ],
     'outputs': [['pp_error', 'int32_t'],
                 ]
    },
    {'name': 'PPB_TCPSocket_Private_ConnectWithNetAddress',
     'inputs': [['tcp_socket', 'PP_Resource'],       # PP_Resource
                ['addr', 'char[]'],                  # PP_NetAddress_Private*
                ['callback_id', 'int32_t'],          # PP_CompletionCallback
                ],
     'outputs': [['pp_error', 'int32_t'],
                 ]
    },
    {'name': 'PPB_TCPSocket_Private_GetLocalAddress',
     'inputs': [['tcp_socket', 'PP_Resource'],       # PP_Resource
                ],
     'outputs': [['local_addr', 'char[]'],           # PP_NetAddress_Private*
                 ['success', 'int32_t'],             # PP_Bool
                 ]
    },
    {'name': 'PPB_TCPSocket_Private_GetRemoteAddress',
     'inputs': [['tcp_socket', 'PP_Resource'],       # PP_Resource
                ],
     'outputs': [['remote_addr', 'char[]'],          # PP_NetAddress_Private*
                 ['success', 'int32_t'],             # PP_Bool
                 ]
    },
    {'name': 'PPB_TCPSocket_Private_SSLHandshake',
     'inputs': [['tcp_socket', 'PP_Resource'],       # PP_Resource
                ['server_name', 'string'],           # const char*
                ['server_port', 'int32_t'],          # uint16_t
                ['callback_id', 'int32_t'],          # PP_CompletionCallback
		],
     'outputs': [['pp_error', 'int32_t'],
                 ]
    },
    {'name': 'PPB_TCPSocket_Private_Read',
     'inputs': [['tcp_socket', 'PP_Resource'],       # PP_Resource
                ['bytes_to_read', 'int32_t'],
		['callback_id', 'int32_t'],          # PP_CompletionCallback
		],
     'outputs': [['buffer', 'char[]'],               # char*
                 ['pp_error_or_bytes', 'int32_t'],
		 ]
    },
    {'name': 'PPB_TCPSocket_Private_Write',
     'inputs': [['tcp_socket', 'PP_Resource'],       # PP_Resource
                ['buffer', 'char[]'],                # const char*
                ['bytes_to_write', 'int32_t'],
                ['callback_id', 'int32_t'],          # PP_CompletionCallback
		],
     'outputs': [['pp_error_or_bytes', 'int32_t'],
                 ]
    },
    {'name': 'PPB_TCPSocket_Private_Disconnect',
     'inputs': [['tcp_socket', 'PP_Resource'],       # PP_Resource
                ],
     'outputs': []
    },
   ]
}
