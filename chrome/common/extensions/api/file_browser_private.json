// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace":"fileBrowserPrivate",
    "nodoc": "true",
    "types": [
      {
        "id": "FileBrowserTask",
        "type": "object",
        "description": "Represents information about available browser tasks. A task is an abstraction of an operation that the file browser can perform over a selected file set.",
        "properties": {
          "taskId": {"type": "string", "description": "The unique identifier of the task."},
          "title": {"type": "string", "description": "Task title."},
          "iconUrl": {"type": "string", "description": "Task icon url (from chrome://extension-icon/...)"},
          "driveApp": {"type": "boolean", "description": "True if this is Drive App."},
          "patterns": {
            "type": "array",
            "items": { "type": "string" },
            "description": "The list of URL patterns supported by the task that matched at least one file."
          }
        }
      },
      {
        "id": "VolumeInfo",
        "type": "object",
        "description": "Mounted disk volume information.",
        "properties": {
          "mountPath": {
            "type": "string",
            "description": "Disk volume mount point path. The value corresponds to its Entry.fullPath in File API."
          },
          "devicePath": {
            "type": "string",
            "description": "Disk volume device path."
          },
          "label": {
            "type": "string",
            "description": "Volume label."
          },
          "deviceType": {
            "type": "string",
            "enum": ["sd", "usb", "optical", "mobile", "unknown"],
            "description": "Device type."
          },
          "readOnly": {
            "type": "boolean",
            "description": "Flag that specifies if volume is mounted in read-only mode."
          },
          "totalSizeKB": {
            "type": "integer",
            "description": "Total disk volume size in KBs"
          }
        }
      },
      {
        "id": "DriveWebApp",
        "type": "object",
        "description": "GData WebApp properties.",
        "properties": {
          "appId": {
            "type": "string",
            "description": "WebApp ID."
          },
          "appName": {
            "type": "string",
            "description": "WebApp name."
          },
          "appIcon": {
            "type": "string",
            "optional": true,
            "description": "URL to the GData application icon for this application."
          },
          "docIcon": {
            "type": "string",
            "optional": true,
            "description": "URL to the GData document icon for documents associated with this application."
          },
          "objectType": {
            "type": "string",
            "description": "Object (file) type description."
          },
          "isPrimary": {
            "type": "boolean",
            "description": "True if this WebApp is the primary (default) open action for this file."
          }
        }
      },
      {
        "id": "GDataFileProperties",
        "type": "object",
        "description": "GData file properties.",
        "properties": {
          "fileUrl": {
            "type": "string",
            "optional": true,
            "description": "the URL given for this file."
          },
          "thumbnailUrl": {
            "type": "string",
            "optional": true,
            "description": "URL to the GData thumbnail image for this file."
          },
          "contentUrl": {
            "type": "string",
            "optional": true,
            "description": "GData URL to the content for this file."
          },
          "editUrl": {
            "type": "string",
            "optional": true,
            "description": "GData edit URL for this file."
          },
          "contentUrl": {
            "type": "string",
            "optional": true,
            "description": "GData content URL for this file."
          },
          "isPinned": {
            "type": "boolean",
            "optional": true,
            "description": "True if the file is pinned in GData cache."
          },
          "isPresent": {
            "type": "boolean",
            "optional": true,
            "description": "True if the file is present in GData cache."
          },
          "isDirty": {
            "type": "boolean",
            "optional": true,
            "description": "True if the file is awaiting upload in GData cache."
          },
          "isHosted": {
            "type": "boolean",
            "optional": true,
            "description": "True if the file is hosted on a GData server instead of local."
          },
          "errorCode": {
            "type": "integer",
            "optional": true,
            "description": "The error code (from base::PlatformFileError) if fetching the properties for this file had an error."
          },
          "driveApps" : {
            "type": "array",
            "optional": true,
            "items": {"$ref": "DriveWebApp"},
            "description": "An array of WebApps capable of opening this file."
          }
        }
      },
      {
        "id": "MountPointInfo",
        "type": "object",
        "description": "Mounted point information.",
        "properties": {
          "mountPath": {
            "type": "string",
            "optional": true,
            "description": "Disk volume mount point path. The value corresponds to its Entry.fullPath in File API."
          },
          "sourcePath": {
            "type": "string",
            "description": "The path to the mounted device, archive file or network resource."
          },
          "mountType": {
            "type": "string",
            "enum": ["device", "file", "network"],
            "description": "Type of the mount."
          },
          "mountCondition": {
            "type": "string",
            "description": "Additional data about mount, for example, that the filesystem is not supported."
          }
        }
      },
      {
        "id": "MountPointSizeStats",
        "type": "object",
        "description": "Information about total and remaining size on the mount point.",
        "properties": {
          "totalSizeKB": {
            "type": "integer",
            "description": "Total available size on the mount point."
          },
          "remainingSizeKB": {
            "type": "integer",
            "description": "Remaining available size on the mount point."
          }
        }
      },
      {
        "id": "VolumeMetadata",
        "type": "object",
        "description": "Mounted disk volume metadata.",
        "properties": {
          "mountPath": {
            "type": "string",
            "description": "Disk volume mount point path."
          },
          "devicePath": {
            "type": "string",
            "description": "Disk volume device path."
          },
          "systemPath": {
            "type": "string",
            "description": "Disk volume system path."
          },
          "filePath": {
            "type": "string",
            "description": "Disk volume file path."
          },
          "deviceLabel": {
            "type": "string",
            "description": "Volume label."
          },
          "driveLabel": {
            "type": "string",
            "description": "Volume's disk label."
          },
          "deviceType": {
            "type": "string",
            "enum": ["usb", "sd", "optical", "mobile", "unknown"],
            "description": "Device type."
          },
          "isParent": {
            "type": "boolean",
            "description": "Flag that specifies if volume is a parent device."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Flag that specifies if volume is mounted in read-only mode."
          },
          "hasMedia": {
            "type": "boolean",
            "description": "Flag that specifies if volume has any media."
          },
          "isOnBootDevice": {
            "type": "boolean",
            "description": "Flag that specifies if volume is on boot device."
          },
          "totalSize": {
            "type": "integer",
            "description": "Total disk volume size."
          }
        }
      },
      {
        "id": "MountEvent",
        "type": "object",
        "description": "Payload data for disk mount / unmount event.",
        "properties": {
          "eventType": {
            "type": "string",
            "enum": ["added", "removed"],
            "description": "Event type that tells listeners which disk volume even was raised."
          },
          "volumeInfo": {
            "$ref": "VolumeInfo",
            "description":"Volume information that this mount event applies to."
          }
        }
      },
      {
        "id": "MountCompletedEvent",
        "type": "object",
        "description": "Payload data for mount event.",
        "properties": {
          "eventType": {
            "type": "string",
            "enum": ["mount", "unmount"],
            "description": "Is the event raised for mounting or unmounting."
          },
          "status": {
            "type": "string",
            "enum": ["success", "error_unknown", "error_internal",
                     "error_unknown_filesystem", "error_unsuported_filesystem",
                     "error_invalid_archive", "error_authentication",
                     "error_network", "error_path_unmounted"],
            "description": "Event type that tells listeners if mount was successful or an error occurred. It also specifies the error."
          },
          "sourcePath": {
            "type": "string",
            "description": "Path that has been mounted."
          },
          "mountPath": {
            "type": "string",
            "optional": true,
            "description": "Path that sourcePath was mounted to."
          },
          "mountType": {
            "type": "string",
            "enum": ["device", "file", "network", "gdata"],
            "description": "Type of the mount."
          }
        }
      },
      {
        "id": "FileTransferStatus",
        "type": "object",
        "description": "Payload data for file transfer status updates.",
        "properties": {
          "fileUrl": {
            "type": "string",
            "description": "URL of file that is being transfered."
          },
          "transferState": {
            "type": "string",
            "enum": ["started", "in_progress", "completed", "failed"],
            "description": "File transfer progress state."
          },
          "transferType": {
            "type": "string",
            "enum": ["upload", "download"],
            "description": "Defines file transfer direction."
          },
          "processed": {
            "type": "integer",
            "optional": true,
            "description": "Completed portion of the transfer operation."
          },
          "total": {
            "type": "integer",
            "optional": true,
            "description": "Total size (cost) of transfer operation."
          }
        }
      },
      {
        "id": "FileTransferCancelStatus",
        "type": "object",
        "description": "Payload data for file transfer cancel response.",
        "properties": {
          "fileUrl": {
            "type": "string",
            "description": "URL of file that is being transfered."
          },
          "canceled": {
            "type": "boolean",
            "description": "True if ongoing transfer operation was found and canceled."
          }
        }
      },
      {
        "id": "FileWatchEvent",
        "type": "object",
        "description": "Payload data for disk mount / unmount event.",
        "properties": {
          "eventType": {
            "type": "string",
            "enum": ["changed", "error"],
            "description": "Specifies type of event that is raised."
          },
          "fileUrl": {
            "type": "string",
            "description":"URL of watched file"
          }
        }
      }
    ],
    "functions": [
      {
        "name": "cancelDialog",
        "type": "function",
        "description": "Cancels file selection.",
        "parameters": []
      },
      {
        "name": "executeTask",
        "description": "Executes file browser task over selected files",
        "parameters": [
          {
            "name": "taskId",
            "type": "string",
            "description": "The unique identifier of task to execute."
          },
          {
            "name": "fileURLs",
            "type": "array",
            "description": "Array of file URLs",
            "items": { "type": "string" }
          },
          {
            "name": "callback",
            "type": "function",
            "optional": true,
            "parameters": [
              {
                "name": "success",
                "type": "boolean",
                "optional": true,
                "description": "True of task execution was successfully initiated."
              }
            ]
          }
        ]
      },
      {
        "name": "setDefaultTask",
        "description": "Sets default task.",
        "parameters": [
          {
            "name": "taskId",
            "type": "string",
            "description": "The unique identifier of task to mark as default."
          },
          {
            "name": "callback",
            "type": "function",
            "optional": true,
            "parameters": []
          }
        ]        
      },
      {
        "name": "getFileTasks",
        "description": "Gets the list of tasks that can be performed over selected files.",
        "parameters": [
          {
            "name": "fileURLs",
            "type": "array",
            "description": "Array of selected file URLs",
            "items": { "type": "string" }
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name": "tasks",
                "type": "array",
                "items": {"$ref": "FileBrowserTask"},
                "description": "The list of matched file URL patterns for this task."
              }
            ]
          }
        ]
      },
      {
        "name": "getStrings",
        "type": "function",
        "description": "Gets localized strings and initialization data.",
        "parameters": [
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "result",
                "type": "object",
                "additionalProperties": { "type": "any" }
              }
            ]
          }
        ]
      },
      {
        "name": "addFileWatch",
        "description": "Adds file watch.",
        "parameters": [
          {
            "name": "fileUrl",
            "type": "string",
            "description": "URL of file to watch"
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "success",
                "type": "boolean",
                "optional": true,
                "description": "True when file watch is successfully added."
              }
            ]
          }
        ]
      },
      {
        "name": "removeFileWatch",
        "description": "Removes file watch.",
        "parameters": [
          {
            "name": "fileUrl",
            "type": "string",
            "description": "URL of watched file to remove"
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "success",
                "type": "boolean",
                "optional": true,
                "description": "True when file watch is successfully removed."
              }
            ]
          }
        ]
      },
      {
        "name": "requestLocalFileSystem",
        "description": "Requests access to local file system",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "fileSystem",
                "type": "object",
                "optional": true,
                "description": "A DOMFileSystem instance for local file system access. null if the caller has no appropriate permissions."
              }
            ]
          }
        ]
      },
      {
        "name": "selectFiles",
        "type": "function",
        "description": "Selects multiple files.",
        "parameters": [
          {
            "name": "selectedPaths",
            "type": "array",
            "description": "Array of selected paths",
            "items": {"type": "string"}
          }
        ]
      },
      {
        "name": "selectFile",
        "type": "function",
        "description": "Selects a file.",
        "parameters": [
          {
            "name": "selectedPath",
            "type": "string",
            "description": "A selected path"
          },
          {
            "name": "index",
            "type": "integer",
            "description": "Index of Filter"
          }
        ]
      },
      {
        "name": "viewFiles",
        "type": "function",
        "description": "Views multiple files.",
        "parameters": [
          {
            "name": "fileUrls",
            "type": "array",
            "description": "Array of selected paths",
            "items": {"type": "string"}
          },
          {
            "name": "id",
            "type": "string",
            "description": "File browser handler id as for internal tasks."
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "success",
                "type": "boolean",
                "description": "True if the selected files can be viewed by the browser."
              }
            ]
          }
        ]
      },
      {
        "name": "getGDataFileProperties",
        "description": "Requests GData file properties for a list of files",
        "parameters": [
          {
            "name": "fileUrls",
            "type": "array",
            "description": "Array of file URLs to fetch properties for."
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "fileProperties",
                "type": "array",
                "items": {"$ref": "GDataFileProperties"},
                "description": "An array of the requested file properties, one entry for each file in fileUrls."
              }
            ]
          }
        ]
      },
      {
        "name": "pinGDataFile",
        "description": "Pins/unpins a GData file in the cache",
        "parameters": [
          {
            "name": "fileUrls",
            "type": "array",
            "description": "Array of file URLs to pin/unpin."
          },
          {
            "name": "pin",
            "type": "boolean",
            "description": "Pass true to pin the files listed."
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "fileProperties",
                "type": "array",
                "items": {"$ref": "GDataFileProperties"},
                "description": "An array of the pinned properties after pinning/unpinning the requested files, one entry for each file in fileUrls."
              }
            ]
          }
        ]
      },
      {
        "name": "getFileLocations",
        "description": "Get file locations",
        "parameters": [
          {
            "name": "fileUrls",
            "type": "array",
            "description": "Array of file URLs to check.",
            "items": { "type": "string" }
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "locations",
                "type": "array",
                "items": {"type": "string"},
                "description": "An array of the file locations for the requested files, one entry for each file in fileUrls."
              }
            ]
          }
        ]
      },
      {
        "name": "getGDataFiles",
        "description": "Get GData files",
        "parameters": [
          {
            "name": "fileUrls",
            "type": "array",
            "description": "Array of gdata file URLs to get.",
            "items": { "type": "string" }
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "localFilePaths",
                "type": "array",
                "items": {"type": "string"},
                "description": "An array of the local file paths for the requested files, one entry for each file in fileUrls."
              }
            ]
          }
        ]
      },
      {
        "name": "getVolumeMetadata",
        "description": "Requests volume's metadata",
        "parameters": [
          {
            "name": "mountUrl",
            "type": "string",
            "description": "Mount url of the volume."
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "volumeMetadata",
                "$ref": "VolumeMetadata",
                "optional": true,
                "description": "A requested metadata dictionary object. undefined if there is no volume with selected devicePath"
              }
            ]
          }
        ]
      },
      {
        "name": "addMount",
        "description": "Mount a resource or a file.",
        "parameters": [
          {
            "name": "source",
            "type": "string",
            "description": "Mount point source. For compressed files it is relative file path within external file system"
          },
          {
            "name": "mountType",
            "type": "string",
            "enum": ["device", "file", "network", "gdata"],
            "description": "Mount point type. 'file' for compressed files"
          },
          {
            "name": "options",
            "type": "object",
            "description": "Name/value pairs for source specific options"
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name": "sourcePath",
                "type": "string",
                "description": "Source path of the mount."
              }
            ]
          }
        ]
      },
      {
        "name": "removeMount",
        "description": "Unmounts a mounted resource.",
        "parameters": [
          {
            "name": "mountPath",
            "type": "string",
            "description": "A path of the mount."
          }
        ]
      },
      {
        "name": "getMountPoints",
        "description": "Get the list of mount points.",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "mountPoints",
                "type": "array",
                "items": {"$ref": "MountPointInfo"},
                "description": "The list of MountPointInfo representing mounted devices."
              }
            ]
          }
        ]
      },
      {
        "name": "getFileTransfers",
        "description": "Get the list of ongoing file transfer operations.",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "fileTransfers",
                "type": "array",
                "items": {"$ref": "FileTransferStatus"},
                "description": "The list of FileTransferStatus representing ongoing file transfers."
              }
            ]
          }
        ]
      },
      {
        "name": "transferFile",
        "description": "Transfers file from local to remote file system.",
        "parameters": [
          {
            "name": "sourceFileUrl",
            "type": "string",
            "description": "Source file from the local file system."
          },
          {
            "name": "destinationFileUrl",
            "type": "string",
            "description": "Destination file on the remote file system."
          },
          {
            "name": "callback",
            "type": "function",
            "optional": true,
            "description": "Completion callback. chrome.extension.lastError will be set if there was an error.",
            "parameters": []
          }
        ]
      },
      {
        "name": "cancelFileTransfers",
        "description": "Cancels ongoing file transfers for selected files.",
        "parameters": [
          {
            "name": "fileUrls",
            "type": "array",
            "description": "Array of files for which ongoing transfer should be canceled.",
            "items": {"type": "string"}
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "fileTransferCancelStatuses",
                "type": "array",
                "items": {"$ref": "FileTransferCancelStatus"},
                "description": "The list of FileTransferCancelStatus."
              }
            ]
          }
        ]
      },
      {
        "name": "getSizeStats",
        "description": "Retrieves total and remaining size of a mount point.",
        "parameters": [
          {
            "name": "mountPath",
            "type": "string",
            "description": "Mount point path."
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "sizeStats",
                "$ref": "MountPointSizeStats",
                "description": "Name/value pairs of size stats."
              }
            ]
          }
        ]
      },
      {
        "name": "formatDevice",
        "description": "Formats a mounted device",
        "parameters": [
          {
            "name": "mountPath",
            "type": "string",
            "description": "Device's mount path."
          }
        ]
      },
      {
        "name": "toggleFullscreen",
        "description": "Switches fullscreen mode on/off for the File Browser.",
        "parameters": []
      },
      {
        "name": "isFullscreen",
        "description": "Checks if the browser is in fullscreen mode.",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name" : "result",
                "type": "boolean",
                "description": "Whether the browser is in fullscreen mode."
              }
            ]
          }
        ]
      },
      {
        "name": "getGDataPreferences",
        "description": "Retrieves GData-related preferences .",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name": "result",
                "type": "object",
                "properties": {
                  "driveEnabled": {"type":"boolean"},
                  "cellularDisabled": {"type":"boolean"},
                  "hostedFilesDisabled": {"type":"boolean"}
                }
              }
            ]
          }
        ]
      },
      {
        "name": "setGDataPreferences",
        "description": "Sets GData-related preferences.",
        "parameters": [
          {
            "name": "changeInfo",
            "type": "object",
            "properties": {
              "cellularDisabled": {"type":"boolean", "optional":true},
              "hostedFilesDisabled": {"type":"boolean", "optional":true}
            }
          }
        ]
      },
      {
        "name": "searchGData",
        "type": "function",
        "description": "Performs drive content search.",
        "parameters": [
          {
            "name": "query",
            "description": "Search query.",
            "type": "string"
          },
          {
            "name": "nextFeed",
            "type": "string",
            "description": "ID of the search feed that should be fetched next. Value passed here should be gotten from previous searchGData call. It can be empty for the initial search request."
          },
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name": "entries",
                "type": "array",
                "items": {
                  "type": "object",
                  "isInstanceOf": "Entry",
                  "description": "Entry representing a search result."
                }
              },
              {
                "name": "nextFeed",
                "type": "string",
                "description": "ID of the feed that contains next chunk of the search result. Should be sent to the next searchGData request to perform incremental search."
              }
            ]
          }
        ]
      },
      {
        "name": "clearDriveCache",
        "description": "Clear all GData local caches.",
        "parameters": []
      },
      {
        "name": "getNetworkConnectionState",
        "description": "Retrieves the state of the currently active network connection.",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "name": "result",
                "type": "object",
                "properties": {
                  "type": {"type": "string"},
                  "online": {"type": "boolean"}
                }
              }
            ]
          }
        ]
      },
      {
        "name": "requestDirectoryRefresh",
        "description": "Requests a refresh of a directory. Used to get the latest metadata of files in a particular directory. Upon completion, onFileChanged event is raised against the target directory, so that the file browser can redraw contents in the directory. Note that the onFileChanged event can be raised even if there is no change in the directory as it's expensive to check if the new contents match the existing ones.",
        "parameters": [
          {
            "name": "fileURL",
            "type": "string",
            "description": "URL of the target directory"
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onDiskChanged",
        "type": "function",
        "description": "Fired when disk mount/unmount event is detected.",
        "parameters": [
          {
            "$ref": "MountEvent",
            "name": "event",
            "description": "Mount event information."
          }
        ]
      },
      {
        "name": "onMountCompleted",
        "type": "function",
        "description": "Fired when mount event is detected.",
        "parameters": [
          {
            "$ref": "MountCompletedEvent",
            "name": "event",
            "description": "MountCompleted event information."
          }
        ]
      },
      {
        "name": "onFileTransfersUpdated",
        "type": "function",
        "description": "Fired when file transfers with remote file system are in progress.",
        "parameters": [
          {
            "type": "array",
            "items": {"$ref": "FileTransferStatus"},
            "name": "event",
            "description": "List of ongoing file statuses for ongoing transfer operations."
          }
        ]
      },
      {
        "name": "onFileChanged",
        "type": "function",
        "description": "Fired when watched file change event is detected.",
        "parameters": [
          {
            "$ref": "FileWatchEvent",
            "name": "event",
            "description": "File watch event information."
          }
        ]
      },
      {
        "name": "onDocumentFeedFetched",
        "type": "function",
        "description": "Fired when a document feed is fetched.",
        "parameters": [
          {
            "type": "integer",
            "name": "entriesFetched",
            "description": "Number of entries fetched so far."
          }
        ]
      },
      {
        "name": "onGDataPreferencesChanged",
        "type": "function",
        "description": "Fired when GData-related preferences change. The preferences can be retrieved via 'getGDataPreferences'.",
        "parameters": []
      },
      {
        "name": "onNetworkConnectionChanged",
        "type": "function",
        "description": "Fired when the active network connection state changes. The network connection state can be retrieved via 'getNetworkConnectionState'.",
        "parameters": []
      }
    ]
  }
]
