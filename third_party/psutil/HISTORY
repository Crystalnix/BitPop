Bug tracker at http://code.google.com/p/psutil/issues

0.2.0 - 2010-11-13
------------------

NEW FEATURES

 * Issue 79: per-process open files.
 * Issue 88: total system physical cached memory.
 * Issue 88: total system physical memory buffers used by the kernel.
 * Issue 91: per-process send_signal() and terminate() methods.
 * Issue 95: NoSuchProcess and AccessDenied exception classes now provide "pid",
   "name" and "msg" attributes.
 * Issue 97: per-process children.
 * Issue 98: Process.get_cpu_times() and Process.get_memory_info now return
   a namedtuple instead of a tuple.
 * Issue 103: per-process opened TCP and UDP connections.
 * Issue 107: add support for Windows 64 bit. (patch by cjgohlke)
 * Issue 111: per-process executable name.
 * Issue 113: exception messages now include process name and pid.
 * Issue 114: process username Windows implementation has been rewritten in pure
   C and no longer uses WMI resulting in a big speedup. Also, pywin32 is no
   longer required as a third-party dependancy. (patch by wj32)
 * Issue 117: added support for Windows 2000.
 * Issue 123: psutil.cpu_percent() and psutil.Process.cpu_percent() accept a
   new 'interval' parameter.
 * Issue 129: per-process number of threads.

BUGFIXES

 * Issue 80: fixed warnings when installing psutil with easy_install.
 * Issue 81: psutil fails to compile with Visual Studio.
 * Issue 94: suspend() raises OSError instead of AccessDenied.
 * Issue 86: psutil didn't compile against FreeBSD 6.x.
 * Issue 102: orphaned process handles obtained by using OpenProcess in C were
   left behind every time Process class was instantiated.
 * Issue 111: path and name Process properties report truncated or erroneous
   values on UNIX.
 * Issue 120: cpu_percent() always returning 100% on OS X.
 * Issue 112: uid and gid properties don't change if process changes effective
   user/group id at some point.
 * Issue 126: ppid, uid, gid, name, exe, cmdline and create_time properties are
   no longer cached and correctly raise NoSuchProcess exception if the process
   disappears.

API CHANGES

 * psutil.Process.path property is deprecated and works as an alias for "exe"
   property.
 * psutil.Process.kill(): signal argument was removed - to send a signal to the
   process use send_signal(signal) method instead.
 * psutil.Process.get_memory_info() returns a nametuple instead of a tuple.
 * psutil.cpu_times() returns a nametuple instead of a tuple.
 * New psutil.Process methods: get_open_files(), get_connections(),
   send_signal() and terminate().
 * ppid, uid, gid, name, exe, cmdline and create_time properties are no longer
   cached and raise NoSuchProcess exception if process disappears.
 * psutil.cpu_percent() no longer returns immediately (see issue 123).
 * psutil.Process.get_cpu_percent() and psutil.cpu_percent() no longer returns
   immediately by default (see issue 123).


0.1.3 - 2010-03-02
------------------

NEW FEATURES

 * Issue 14: per-process username
 * Issue 51: per-process current working directory (Windows and Linux only)
 * Issue 59: Process.is_running() is now 10 times faster
 * Issue 61: added supoprt for FreeBSD 64 bit
 * Issue 71: implemented suspend/resume process
 * Issue 75: python 3 support

BUGFIXES

 * Issue 36: process cpu_times() and memory_info() functions succeeded also for
   dead processes while a NoSuchProcess exception is supposed to be raised.
 * Issue 48: incorrect size for mib array defined in getcmdargs for BSD
 * Issue 49: possible memory leak due to missing free() on error condition on
 * Issue 50: fixed getcmdargs() memory fragmentation on BSD
 * Issue 55: test_pid_4 was failing on Windows Vista
 * Issue 57: some unit tests were failing on systems where no swap memory is
   available
 * Issue 58: is_running() is now called before kill() to make sure we are going
   to kill the correct process.
 * Issue 73: virtual memory size reported on OS X includes shared library size
 * Issue 77: NoSuchProcess wasn't raised on Process.create_time if kill() was
   used first.


0.1.2 - 2009-05-06
------------------

NEW FEATURES

 * Issue 32: Per-process CPU user/kernel times
 * Issue 33: Process create time
 * Issue 34: Per-process CPU utilization percentage
 * Issue 38: Per-process memory usage (bytes)
 * Issue 41: Per-process memory utilization (percent)
 * Issue 39: System uptime
 * Issue 43: Total system virtual memory
 * Issue 46: Total system physical memory
 * Issue 44: Total system used/free virtual and physical memory

BUGFIXES

 * Issue 36: NoSuchProcess not raised on Windows when accessing timing methods
 * Issue 40: test_get_cpu_times() failing on FreeBSD and OS X
 * Issue 42: get_memory_percent() raises AccessDenied on Windows


0.1.1 - 2009-03-06
------------------

NEW FEATURES

 * Issue 4: FreeBSD support for all functions of psutil
 * Issue 9: Process.uid and Process.gid now retrieve process UID and GID.
 * Issue 11: Support for parent/ppid - Process.parent property returns a
   Process object representing the parent process, and Process.ppid returns
   the parent PID.
 * Issue 12 & 15: NoSuchProcess exception now raised when creating an object
   for a nonexistent process, or when retrieving information about a process
   that has gone away.
 * Issue 21: AccessDenied exception created for raising access denied errors
   from OSError or WindowsError on individual platforms.
 * Issue 26: psutil.process_iter() function to iterate over processes as
   Process objects with a generator.
 * Process objects can now also be compared with == operator for equality
   (PID, name, command line are compared).

BUGFIXES

 * Issue 16: Special case for Windows' "System Idle Process" (PID 0) which
   otherwise would return an "invalid parameter" exception.
 * Issue 17: get_process_list() ignores NoSuchProcess and AccessDenied
   exceptions during building of the list.
 * Issue 22: Process(0).kill() was failing on Windows with an unset exception
 * Issue 23: Special case for pid_exists(0)
 * Issue 24: Process(0).kill() now raises AccessDenied exception instead of
   WindowsError.
 * Issue 30: psutil.get_pid_list() was returning two instances of PID 0 on OS
   X and FreeBSD platforms.


0.1.0 - 2009-01-27
------------------

 * Initial release.

